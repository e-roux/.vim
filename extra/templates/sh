#! /usr/bin/env bash
#
# @author      : {{+~g:name+}} ({{+~g:email+}})
# @file        : {{+~expand('%:t')+}}
# @created     : {{+~strftime("%c")+}}
# @description : {{++}}
#
# Distributed under terms of the {{+LICENSE+}} license.

set -o nounset   # abort on unbound variable
set -o errexit   # abort on nonzero exitstatus
set -o pipefail  # don't hide errors within pipes
# equivalent: set -euo pipefail

set -x

readonly KERNEL=$(uname | tr "A-Z" "a-z")

function _get_gnu_getopt_cwd() {
    # Print the path to GNU getopt

    if [ $KERNEL == "darwin" ]; then

        # use GNU getopt is installed with brew
        local is_brew_installed=$(command -v brew)

        if [ $? == 0 ]; then
            local getopt_prefix=$(brew --prefix gnu-getopt 2>/dev/null)
            if [ $? == 0 ]; then
                printf "${getopt_prefix}/bin/getopt"
                return 0
            else
                echo "GNU getopt seems not to be installed on the system"
                exit 1
            fi
        fi
    else
        printf $(command -v getopt)
    fi
}

alias getopt=$(_get_gnu_getopt_cwd)

# echo $AZE

TEMP=$(getopt -o vdm: --long verbose,debug,memory:,debugfile:,minheap:,maxheap: \
    -n 'javawrap' -- "$@")

    if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

# Note the quotes around '$TEMP': they are essential!
eval set -- "$TEMP"

VERBOSE=false
DEBUG=false
MEMORY=
DEBUGFILE=
JAVA_MISC_OPT=
while true; do
    case "$1" in
        -v | --verbose ) VERBOSE=true; shift ;;
        -d | --debug ) DEBUG=true; shift ;;
        -m | --memory ) MEMORY="$2"; shift 2 ;;
        --debugfile ) DEBUGFILE="$2"; shift 2 ;;
        --minheap )
            JAVA_MISC_OPT="$JAVA_MISC_OPT -XX:MinHeapFreeRatio=$2"; shift 2 ;;
        --maxheap )
            JAVA_MISC_OPT="$JAVA_MISC_OPT -XX:MaxHeapFreeRatio=$2"; shift 2 ;;
        -- ) shift; break ;;
        * ) break ;;
    esac
done

echo """VERBOSE is: ${VERBOSE}
DEBUG is: ${DEBUG}
MEMORY is: ${MEMORY}
DEBUGFILE is: ${DEBUGFILE}
"""

# vim:set ft=bash fdm=syntax:
